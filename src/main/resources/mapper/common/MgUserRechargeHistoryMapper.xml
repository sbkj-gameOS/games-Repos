<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.steven.game.dao.MgUserRechargeHistoryMapper" >
  <resultMap id="BaseResultMap" type="com.steven.game.vo.MgUserRechargeHistory" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="user_openid" property="userOpenid" jdbcType="VARCHAR" />
    <result column="charge_time" property="chargeTime" jdbcType="VARCHAR" />
    <result column="room_card_num" property="roomCardNum" jdbcType="INTEGER" />
    <result column="original_price" property="originalPrice" jdbcType="DECIMAL" />
    <result column="prefer_amount" property="preferAmount" jdbcType="DECIMAL" />
    <result column="pay_amount" property="payAmount" jdbcType="DECIMAL" />
    <result column="dir_home_amount" property="dirHomeAmount" jdbcType="DECIMAL" />
    <result column="ind_home_amount" property="indHomeAmount" jdbcType="DECIMAL" />
    <result column="balance" property="balance" jdbcType="DECIMAL" />
    <result column="total" property="total" jdbcType="DECIMAL" />
    <result column="create_time" property="createTime" jdbcType="VARCHAR" />
    <result column="last_update_time" property="lastUpdateTime" jdbcType="VARCHAR" />
    <result column="is_del" property="isDel" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_name, user_openid, charge_time, room_card_num, original_price, prefer_amount, 
    pay_amount, dir_home_amount, ind_home_amount, balance, total, create_time, last_update_time, 
    is_del
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.steven.game.vo.MgUserRechargeHistoryExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mg_user_recharge_history
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from mg_user_recharge_history
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from mg_user_recharge_history
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.steven.game.vo.MgUserRechargeHistoryExample" >
    delete from mg_user_recharge_history
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.steven.game.vo.MgUserRechargeHistory" >
    insert into mg_user_recharge_history (id, user_name, user_openid, 
      charge_time, room_card_num, original_price, 
      prefer_amount, pay_amount, dir_home_amount, 
      ind_home_amount, balance, total, 
      create_time, last_update_time, is_del
      )
    values (#{id,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, #{userOpenid,jdbcType=VARCHAR}, 
      #{chargeTime,jdbcType=VARCHAR}, #{roomCardNum,jdbcType=INTEGER}, #{originalPrice,jdbcType=DECIMAL}, 
      #{preferAmount,jdbcType=DECIMAL}, #{payAmount,jdbcType=DECIMAL}, #{dirHomeAmount,jdbcType=DECIMAL}, 
      #{indHomeAmount,jdbcType=DECIMAL}, #{balance,jdbcType=DECIMAL}, #{total,jdbcType=DECIMAL}, 
      #{createTime,jdbcType=VARCHAR}, #{lastUpdateTime,jdbcType=VARCHAR}, #{isDel,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.steven.game.vo.MgUserRechargeHistory" >
    insert into mg_user_recharge_history
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="userOpenid != null" >
        user_openid,
      </if>
      <if test="chargeTime != null" >
        charge_time,
      </if>
      <if test="roomCardNum != null" >
        room_card_num,
      </if>
      <if test="originalPrice != null" >
        original_price,
      </if>
      <if test="preferAmount != null" >
        prefer_amount,
      </if>
      <if test="payAmount != null" >
        pay_amount,
      </if>
      <if test="dirHomeAmount != null" >
        dir_home_amount,
      </if>
      <if test="indHomeAmount != null" >
        ind_home_amount,
      </if>
      <if test="balance != null" >
        balance,
      </if>
      <if test="total != null" >
        total,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="lastUpdateTime != null" >
        last_update_time,
      </if>
      <if test="isDel != null" >
        is_del,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userOpenid != null" >
        #{userOpenid,jdbcType=VARCHAR},
      </if>
      <if test="chargeTime != null" >
        #{chargeTime,jdbcType=VARCHAR},
      </if>
      <if test="roomCardNum != null" >
        #{roomCardNum,jdbcType=INTEGER},
      </if>
      <if test="originalPrice != null" >
        #{originalPrice,jdbcType=DECIMAL},
      </if>
      <if test="preferAmount != null" >
        #{preferAmount,jdbcType=DECIMAL},
      </if>
      <if test="payAmount != null" >
        #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="dirHomeAmount != null" >
        #{dirHomeAmount,jdbcType=DECIMAL},
      </if>
      <if test="indHomeAmount != null" >
        #{indHomeAmount,jdbcType=DECIMAL},
      </if>
      <if test="balance != null" >
        #{balance,jdbcType=DECIMAL},
      </if>
      <if test="total != null" >
        #{total,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdateTime != null" >
        #{lastUpdateTime,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null" >
        #{isDel,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.steven.game.vo.MgUserRechargeHistoryExample" resultType="java.lang.Integer" >
    select count(*) from mg_user_recharge_history
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update mg_user_recharge_history
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userName != null" >
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.userOpenid != null" >
        user_openid = #{record.userOpenid,jdbcType=VARCHAR},
      </if>
      <if test="record.chargeTime != null" >
        charge_time = #{record.chargeTime,jdbcType=VARCHAR},
      </if>
      <if test="record.roomCardNum != null" >
        room_card_num = #{record.roomCardNum,jdbcType=INTEGER},
      </if>
      <if test="record.originalPrice != null" >
        original_price = #{record.originalPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.preferAmount != null" >
        prefer_amount = #{record.preferAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.payAmount != null" >
        pay_amount = #{record.payAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.dirHomeAmount != null" >
        dir_home_amount = #{record.dirHomeAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.indHomeAmount != null" >
        ind_home_amount = #{record.indHomeAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.balance != null" >
        balance = #{record.balance,jdbcType=DECIMAL},
      </if>
      <if test="record.total != null" >
        total = #{record.total,jdbcType=DECIMAL},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.lastUpdateTime != null" >
        last_update_time = #{record.lastUpdateTime,jdbcType=VARCHAR},
      </if>
      <if test="record.isDel != null" >
        is_del = #{record.isDel,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update mg_user_recharge_history
    set id = #{record.id,jdbcType=BIGINT},
      user_name = #{record.userName,jdbcType=VARCHAR},
      user_openid = #{record.userOpenid,jdbcType=VARCHAR},
      charge_time = #{record.chargeTime,jdbcType=VARCHAR},
      room_card_num = #{record.roomCardNum,jdbcType=INTEGER},
      original_price = #{record.originalPrice,jdbcType=DECIMAL},
      prefer_amount = #{record.preferAmount,jdbcType=DECIMAL},
      pay_amount = #{record.payAmount,jdbcType=DECIMAL},
      dir_home_amount = #{record.dirHomeAmount,jdbcType=DECIMAL},
      ind_home_amount = #{record.indHomeAmount,jdbcType=DECIMAL},
      balance = #{record.balance,jdbcType=DECIMAL},
      total = #{record.total,jdbcType=DECIMAL},
      create_time = #{record.createTime,jdbcType=VARCHAR},
      last_update_time = #{record.lastUpdateTime,jdbcType=VARCHAR},
      is_del = #{record.isDel,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.steven.game.vo.MgUserRechargeHistory" >
    update mg_user_recharge_history
    <set >
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userOpenid != null" >
        user_openid = #{userOpenid,jdbcType=VARCHAR},
      </if>
      <if test="chargeTime != null" >
        charge_time = #{chargeTime,jdbcType=VARCHAR},
      </if>
      <if test="roomCardNum != null" >
        room_card_num = #{roomCardNum,jdbcType=INTEGER},
      </if>
      <if test="originalPrice != null" >
        original_price = #{originalPrice,jdbcType=DECIMAL},
      </if>
      <if test="preferAmount != null" >
        prefer_amount = #{preferAmount,jdbcType=DECIMAL},
      </if>
      <if test="payAmount != null" >
        pay_amount = #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="dirHomeAmount != null" >
        dir_home_amount = #{dirHomeAmount,jdbcType=DECIMAL},
      </if>
      <if test="indHomeAmount != null" >
        ind_home_amount = #{indHomeAmount,jdbcType=DECIMAL},
      </if>
      <if test="balance != null" >
        balance = #{balance,jdbcType=DECIMAL},
      </if>
      <if test="total != null" >
        total = #{total,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdateTime != null" >
        last_update_time = #{lastUpdateTime,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null" >
        is_del = #{isDel,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.steven.game.vo.MgUserRechargeHistory" >
    update mg_user_recharge_history
    set user_name = #{userName,jdbcType=VARCHAR},
      user_openid = #{userOpenid,jdbcType=VARCHAR},
      charge_time = #{chargeTime,jdbcType=VARCHAR},
      room_card_num = #{roomCardNum,jdbcType=INTEGER},
      original_price = #{originalPrice,jdbcType=DECIMAL},
      prefer_amount = #{preferAmount,jdbcType=DECIMAL},
      pay_amount = #{payAmount,jdbcType=DECIMAL},
      dir_home_amount = #{dirHomeAmount,jdbcType=DECIMAL},
      ind_home_amount = #{indHomeAmount,jdbcType=DECIMAL},
      balance = #{balance,jdbcType=DECIMAL},
      total = #{total,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=VARCHAR},
      last_update_time = #{lastUpdateTime,jdbcType=VARCHAR},
      is_del = #{isDel,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>